services:

  redis:
    image: redis:latest
    restart: on-failure
    env_file:
      - .env


  spa_db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER -d ${POSTGRES_DB}' ]
      interval: 10s
      retries: 5
      timeout: 5s

  spa_app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      spa_db:
        condition: service_healthy
    volumes:
      - .:/spa_app
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    volumes:
      - .:/spa_app
    depends_on:
      - redis
      - spa_app
      - spa_db


  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    restart: on-failure
    volumes:
      - .:/spa_app
    depends_on:
      - redis
      - spa_app
      - spa_db

volumes:
  pg_data:
